apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "rediscl.fullname" . }}-config
  labels:
    {{- include "rediscl.labels" . | nindent 4 }}
data:
  redis.conf: |
    {{- if .Values.redis.customConfig }}
    {{- .Values.redis.customConfig | nindent 4 }}
    {{- else }}
    dir "/data/store/db"
    port {{ .Values.redis.port }}
    cluster-enabled yes
    cluster-config-file "/data/store/conf/nodes.conf"
    {{- range $key, $value := .Values.redis.config }}
    {{ $key }} {{ $value }}
    {{- end }}
    {{- if eq (toString .Values.auth.enabled) "true" }}
    requirepass replace-default-auth
    masterauth replace-default-auth
    {{- end }}
    {{- end }}

  init.sh: |
    #!/bin/sh
    # set -x

    INDEX="${POD_NAME##*-}"
    ANNOUNCE={{ include "rediscl.fullname" . }}-announce-$REDISCL_GROUP
    REDIS_CONF=/data/store/conf/redis.conf

    {{- if .Values.hostNetwork }}
    ANNOUNCE_IP=$POD_IP
    {{- else }}
    ANNOUNCE_IP=$(getent hosts "$ANNOUNCE-$INDEX" | awk '{ print $1 }')
    {{- end }}
    if [ -z "$ANNOUNCE_IP" ]; then
        echo "Could not resolve the announce ip for this pod"
        exit 1
    fi

    {{- if .Values.manualMode }}

    if [ -f /data/store/conf/done ]; then
        echo "Skipping by manual mode"
        exit 0
    fi
    {{- end }}

    echo "Initializing..."

    mkdir -p /data/store/conf
    mkdir -p /data/store/db

    cp -f /readonly-config/redis.conf "$REDIS_CONF"
    echo "cluster-announce-ip $ANNOUNCE_IP" >> $REDIS_CONF

    {{- if eq (toString .Values.auth.enabled) "true" }}

    echo "Setting auth values"
    ESCAPED_AUTH=$(echo "$AUTH" | sed -e 's/[\/&]/\\&/g');
    sed -i "s/replace-default-auth/${ESCAPED_AUTH}/" $REDIS_CONF
    {{- end }}

    echo "Done" > /data/store/conf/done
    echo "Ready..."
    exit 0
