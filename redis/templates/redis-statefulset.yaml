apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "redis.fullname" . }}
  labels:
    {{- include "redis.labels" . | nindent 4 }}
  {{- with .Values.podAnnotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "redis.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  serviceName: {{ include "redis.fullname" . }}
  replicas: {{ .Values.replicas }}
  podManagementPolicy: OrderedReady
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "redis.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
      annotations:
        checksum/configmap-config: {{ include (print $.Template.BasePath "/redis-configmap-config.yaml") . | sha256sum }}
        checksum/configmap-probe: {{ include (print $.Template.BasePath "/redis-configmap-probe.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- if and (.Values.metrics.enabled) (.Values.metrics.prometheusDiscovery) }}
        prometheus.io/port: "{{ .Values.metrics.port }}"
        prometheus.io/scrape: "true"
        prometheus.io/path: {{ .Values.metrics.path }}
        {{- end }}
    spec:
      {{- with .Values.schedulerName }}
      schedulerName: {{ . }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- tpl . $ | nindent 8 }}
      {{- end }}
      {{- with .Values.securityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.hostNetwork }}
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      {{- end }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      initContainers:
      {{- if .Values.initSysctl.enabled }}
      - name: init-sysctl
        image: {{ .Values.initSysctl.image.repository }}:{{ .Values.initSysctl.image.tag }}
        imagePullPolicy: {{ .Values.initSysctl.image.pullPolicy }}
        command:
          {{- toYaml .Values.initSysctl.command | nindent 10 }}
        securityContext:
          runAsNonRoot: false
          privileged: true
          runAsUser: 0
        {{- if .Values.initSysctl.mountHostSys }}
        volumeMounts:
        - name: host-sys
          mountPath: /host-sys
        {{- end }}
      {{- end }}
      - name: init-config
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command:
        - sh
        args:
        - /readonly-config/init.sh
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: SENTINEL_ID_SRC
          value: {{ include "redis.fullname" . }}
        {{- if .Values.auth.enabled }}
        - name: AUTH
          valueFrom:
            secretKeyRef:
              name: {{ include "redis.authSecret" . }}
              key: password
        {{- end }}
        volumeMounts:
        - name: config
          mountPath: /readonly-config
          readOnly: true
        - name: data
          mountPath: /data
        {{- with .Values.initConfig.resources }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}
      containers:
      - name: redis
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command:
        - redis-server
        args:
        - /data/conf/redis.conf
        {{- if .Values.auth.enabled }}
        env:
        - name: AUTH
          valueFrom:
            secretKeyRef:
              name: {{ include "redis.authSecret" . }}
              key: password
        {{- end }}
        ports:
        - name: redis
          containerPort: {{ .Values.redis.port }}
        volumeMounts:
        - mountPath: /data
          name: data
        - mountPath: /probe
          name: probe
        readinessProbe:
          exec:
            command: [ "sh", "/probe/readiness.sh", "{{ .Values.redis.port }}" ]
          {{- with .Values.redis.readinessProbe }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
        livenessProbe:
          exec:
            command: [ "sh", "/probe/readiness.sh", "{{ .Values.redis.port }}" ]
          {{- with .Values.redis.livenessProbe }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
        {{- with .Values.redis.resources }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}
      - name: sentinel
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command:
        - redis-sentinel
        args:
        - /data/conf/sentinel.conf
        {{- if .Values.auth.enabled }}
        env:
        - name: AUTH
          valueFrom:
            secretKeyRef:
              name: {{ include "redis.authSecret" . }}
              key: password
        {{- end }}
        ports:
        - name: sentinel
          containerPort: {{ .Values.sentinel.port }}
        volumeMounts:
        - mountPath: /data
          name: data
        - mountPath: /probe
          name: probe
        readinessProbe:
          exec:
            command: [ "sh", "/probe/readiness.sh", "{{ .Values.sentinel.port }}" ]
          {{- with .Values.sentinel.readinessProbe }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
        livenessProbe:
          exec:
            command: [ "sh", "/probe/readiness.sh", "{{ .Values.sentinel.port }}" ]
          {{- with .Values.sentinel.livenessProbe }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
        {{- with .Values.sentinel.resources }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}
      {{- if .Values.metrics.enabled }}
      - name: metrics
        image: {{ .Values.metrics.image.repository }}:{{ .Values.metrics.image.tag }}
        imagePullPolicy: {{ .Values.metrics.image.pullPolicy }}
        args:
        -  --web.telemetry-path={{ .Values.metrics.path }}
        -  --web.listen-address=:{{ .Values.metrics.port }}
        env:
        - name: REDIS_ADDR
          value: redis://localhost:{{ .Values.redis.port }}
        {{- if .Values.auth.enabled }}
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "redis.authSecret" . }}
              key: password
        {{- end }}
        {{- with .Values.metrics.extraEnvs }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        ports:
        - name: metrics
          containerPort: {{ .Values.metrics.port }}
        livenessProbe:
          httpGet:
            path: {{ .Values.metrics.path }}
            port: {{ .Values.metrics.port }}
          {{- with .Values.metrics.livenessProbe }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
        {{- with .Values.metrics.resources }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}
      {{- end }}
      volumes:
      - name: config
        configMap:
          name: {{ include "redis.fullname" . }}-config
      - name: probe
        configMap:
          name: {{ include "redis.fullname" . }}-probe
      {{- if .Values.initSysctl.mountHostSys }}
      - name: host-sys
        hostPath:
          path: /sys
      {{- end }}
  {{- if not .Values.persistentVolume.enabled }}
      - name: data
        emptyDir: {}
  {{- else }}
  volumeClaimTemplates:
  - metadata:
      name: data
      {{- with .Values.persistentVolume.annotations }}
      annotations:
      {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- with .Values.persistentVolume.accessModes }}
      accessModes:
      {{- toYaml . | nindent 6 }}
      {{- end }}
      resources:
        requests:
          storage: {{ .Values.persistentVolume.size | quote }}
      {{- if .Values.persistentVolume.storageClass }}
      {{- if (eq "-" .Values.persistentVolume.storageClass) }}
      storageClassName: ""
      {{- else }}
      storageClassName: "{{ .Values.persistentVolume.storageClass }}"
      {{- end }}
      {{- end }}
  {{- end }}
