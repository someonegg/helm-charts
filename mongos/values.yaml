## Default values for mongos.

replicas: 3

shardGroups: 2
shardCollections: []
# - database: db1
#   collection: colA
#   key: keyX
#   mode: hashed
#   chunks: "8192"
# - database: db2
#   collection: colB
#   key: keyY
#   mode: ranged
# - database: db3
#   collection: colC
#   key: keyZ
#   mode: ranged-unique

configsvr:
  replSet: config
  clusterRole: configsvr

extraLabels: {}

## Pod config

image:
  repository: mongo
  tag: 3.6.13
  pullPolicy: IfNotPresent

podDisruptionBudget: {}
  # maxUnavailable: 1
  # minAvailable: 2

podAnnotations: {}

svcAnnotations: {}

securityContext:
  runAsUser: 999
  fsGroup: 999
  runAsNonRoot: true

hostNetwork: false
terminationGracePeriodSeconds: 30

## Pod assignment

nodeSelector: {}

tolerations: []

# affinity: |
  ## go tpl

podAntiAffinity:
  hard: false
  # topologyKey: kubernetes.io/hostname

# schedulerName: stork

## Containers

initSysctl:
  enabled: false
  image:
    repository: bitnami/minideb
    tag: buster
    pullPolicy: IfNotPresent
  command: []
  mountHostSys: false

initConfig:
  resources: {}
    # requests:
    #   memory: 200Mi
    #   cpu: 100m
    # limits:
    #   memory: 200Mi

mongos:
  port: 27017
  # suffixFQDN: servers.xxx.com

  configmap: {}

  extraEnvs: {}
  # - name: TCMALLOC_AGGRESSIVE_DECOMMIT
  #   value: "true"

  readinessProbe:
    initialDelaySeconds: 15
    periodSeconds: 10
  livenessProbe:
    initialDelaySeconds: 30
    periodSeconds: 10

  resources: {}

metrics:
  enabled: false
  image:
    repository: ssheehy/mongodb-exporter
    tag: 0.10.0
    pullPolicy: IfNotPresent

  extraArgs: |-
    --mongodb.socket-timeout=3s \
    --mongodb.sync-timeout=1m

  ## prometheus port & scrape path
  port: 9216
  path: "/metrics"

  prometheusDiscovery: false

  serviceMonitor:
    enabled: true
    interval: 30s
    scrapeTimeout: 10s
    # prometheusNamespace: "monitoring"
    prometheusSelector: {}

  livenessProbe:
    initialDelaySeconds: 30
    periodSeconds: 15

  resources: {}
